version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3.5.6
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2.4.0
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  kafdrop:
    container_name: senzing-kafdrop
    depends_on:
      - kafka
    environment:
#     See https://github.com/obsidiandynamics/kafdrop#environment-variables
      JVM_OPTS: "-Xms32M -Xmx64M"
      KAFKA_BROKERCONNECT: "senzing-kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"
    image: obsidiandynamics/kafdrop:3.23.0
    networks:
      - backend
    ports:
      - 9179:9000
    restart: always

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_RECORD_MAX: ${SENZING_RECORD_MAX:-5000}
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: json-to-kafka
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-1.2.3}
    networks:
      - backend
    restart: on-failure

  initcontainer:
    container_name: senzing-init-container
    image: senzing/init-container:${SENZING_DOCKER_IMAGE_VERSION_INIT_CONTAINER:-1.6.3}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  sqliteweb:
    container_name: senzing-sqlite-web
    depends_on:
      - initcontainer
    environment:
      SQLITE_DATABASE: G2C.db
    image: coleifer/sqlite-web:latest
    networks:
      - backend
    ports:
      - 9174:8080
    restart: always
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}/sqlite:/data

  debug:
    cap_add:
      - ALL
    container_name: senzing-debug
    image: senzing/senzing-debug:${SENZING_DOCKER_IMAGE_VERSION_SENZING_DEBUG:-1.3.5}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-GENERIC}
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_PROCESSES: ${SENZING_PROCESSES:-1}
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader:${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER:-1.6.5}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
#     See https://github.com/Senzing/redoer#configuration
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: redo
    image: senzing/redoer:${SENZING_DOCKER_IMAGE_VERSION_REDOER:-1.3.4}
    networks:
      - backend
    privileged: true
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  api:
    container_name: senzing-api-server
    command:
      - -httpPort
      - "8250"
      - -bindAddr
      - all
      - -iniFile
      - /etc/opt/senzing/G2Module.ini
      - -allowedOrigins
      - "*"
      - -enableAdmin
    image: senzing/senzing-api-server:${SENZING_DOCKER_IMAGE_VERSION_SENZING_API_SERVER:-2.3.0}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
#     See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: http://senzing-api-server:8250
      SENZING_WEB_SERVER_ADMIN_AUTH_MODE: JWT
      SENZING_WEB_SERVER_ADMIN_AUTH_PATH: http://senzing-webapp:8251
      SENZING_WEB_SERVER_API_PATH: /api
      SENZING_WEB_SERVER_PORT: 8251
      SENZING_WEB_SERVER_URL: http://senzing-webapp:8251
    image: senzing/entity-search-web-app:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP:-2.1.1}
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

  jupyter:
    container_name: senzing-jupyter
    command:
      - start.sh
      - jupyter
      - notebook
      - "--NotebookApp.token=''"
    depends_on:
      - loader
    image: senzing/jupyter:${SENZING_DOCKER_IMAGE_VERSION_JUPYTER:-1.2.0}
    networks:
      - backend
    ports:
      - 9178:8888
    restart: always
    volumes:
      - ${JUPYTER_NOTEBOOKS_SHARED_DIR:-~}:/notebooks/shared
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  xterm:
    container_name: senzing-xterm
    image: senzing/xterm:${SENZING_DOCKER_IMAGE_VERSION_XTERM:-1.0.3}
    networks:
      - backend
    ports:
      - 8254:5000
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

networks:
  backend:
