version: '3'
services:

  mssql:
    container_name: senzing-mssql
    environment:
#     See https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables
      ACCEPT_EULA: ${ACCEPT_EULA:-Y}
      MSSQL_PID: ${MSSQL_PID:-Developer}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-Passw0rd}
    image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
    networks:
      - backend
    ports:
      - 1433:1433
    restart: always
    volumes:
      - ${MSSQL_DIR:-/var/opt/mssql}:/var/opt/mssql

  adminer:
    container_name: senzing-adminer
    environment:
      ADMINER_DEFAULT_SERVER: senzing-mssql
    image: senzing/adminer:${SENZING_DOCKER_IMAGE_VERSION_ADMINER:-1.0.0}
    networks:
      - backend
    ports:
      - 9177:8080
    restart: always

  rabbitmq:
    container_name: senzing-rabbitmq
    environment:
#     See https://github.com/bitnami/bitnami-docker-rabbitmq#configuration
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
    image: bitnami/rabbitmq:3.8.2
    networks:
      - backend
    ports:
      - 15672:15672
      - 5672:5672
    restart: always
    volumes:
      - ${RABBITMQ_DIR}:/bitnami

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - rabbitmq
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_RECORD_MAX: ${SENZING_RECORD_MAX:-5000}
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: json-to-rabbitmq
    image: senzing/stream-producer:${SENZING_STREAM_PRODUCER_VERSION:-1.2.2}
    networks:
      - backend
    restart: on-failure

  mssql-create-db:
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -Q
      - "CREATE DATABASE G2"
      - -S
      - senzing-mssql
      - -U
      - sa
    container_name: senzing-mssql-create-database
    depends_on:
      - mssql
    image: mcr.microsoft.com/mssql-tools
    networks:
      - backend
    restart: on-failure

  mssql-create-senzing:
#   For command-line options, see https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -d
      - G2
      - -i
      - /opt/senzing/g2/resources/schema/g2core-schema-mssql-create.sql
      - -o
      - /dev/stdout
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -S
      - senzing-mssql
      - -U
      - sa
      - -e
    container_name: senzing-mssql-create-senzing
    depends_on:
      - mssql-create-db
    image: mcr.microsoft.com/mssql-tools
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - mssql
      - mssql-create-db
      - mssql-create-senzing
    environment:
      LD_LIBRARY_PATH: /opt/senzing/g2/lib:/opt/senzing/g2/lib/debian:/opt/IBM/db2/clidriver/lib:/opt/microsoft/msodbcsql17/lib64
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@senzing-mssql:1433/${MSSQL_DATABASE:-G2}"
      SENZING_INIT_CONTAINER_SLEEP: 30
    image: senzing/init-container:${SENZING_DOCKER_IMAGE_VERSION_INIT_CONTAINER:-1.5.7}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  debug:
    cap_add:
      - ALL
    container_name: senzing-debug
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
    image: senzing/senzing-debug:${SENZING_DOCKER_IMAGE_VERSION_SENZING_DEBUG:-1.3.5}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - rabbitmq
      - mssql-create-senzing
    environment:
      LC_CTYPE: en_US.utf8
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@senzing-mssql:1433/${MSSQL_DATABASE:-G2}"
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-GENERIC}
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_PROCESSES: ${SENZING_PROCESSES:-1}
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_SUBCOMMAND: rabbitmq
    image: senzing/stream-loader:${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER:-1.6.1}
    networks:
      - backend
    restart: always
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
#     See https://github.com/Senzing/redoer#configuration
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@senzing-mssql:1433/${MSSQL_DATABASE:-G2}"
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: redo
    image: senzing/redoer:${SENZING_DOCKER_IMAGE_VERSION_REDOER:-1.3.2}
    networks:
      - backend
    privileged: true
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  api:
    container_name: senzing-api-server
    command:
      - -httpPort
      - "8250"
      - -bindAddr
      - all
      - -iniFile
      - /etc/opt/senzing/G2Module.ini
      - -allowedOrigins
      - "*"
      - -enableAdmin
    depends_on:
      - mssql-create-senzing
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@senzing-mssql:1433/${MSSQL_DATABASE:-G2}"
    image: senzing/senzing-api-server:${SENZING_DOCKER_IMAGE_VERSION_SENZING_API_SERVER:-2.0.1}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
#     See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: http://senzing-api-server:8250
      SENZING_WEB_SERVER_ADMIN_AUTH_MODE: JWT
      SENZING_WEB_SERVER_ADMIN_AUTH_PATH: http://senzing-webapp:8251
      SENZING_WEB_SERVER_API_PATH: /api
      SENZING_WEB_SERVER_PORT: 8251
      SENZING_WEB_SERVER_URL: http://senzing-webapp:8251
    image: senzing/entity-search-web-app:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP:-2.0.0}
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

  xterm:
    container_name: senzing-xterm
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
    image: senzing/xterm:${SENZING_XTERM_VERSION:-1.0.3}
    networks:
      - backend
    ports:
      - 8254:5000
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

networks:
  backend:
